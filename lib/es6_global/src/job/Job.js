// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Seq from "../std/Seq.js";
import * as Flat from "../std/Flat.js";
import * as Task from "../std/Task.js";
import * as Conan from "./Conan.js";
import * as Curry from "../../../../node_modules/rescript/lib/es6/curry.js";
import * as Docker from "./Docker.js";
import * as Command from "./Command.js";
import * as Belt_Array from "../../../../node_modules/rescript/lib/es6/belt_Array.js";
import * as Belt_Result from "../../../../node_modules/rescript/lib/es6/belt_Result.js";

function parseMode(str) {
  switch (str) {
    case "conan" :
        return "conan";
    case "conan-install-script" :
        return "conan-install-script";
    case "conan-install-tarball" :
        return "conan-install-tarball";
    case "docker" :
        return "docker";
    default:
      return "command";
  }
}

function load(ints) {
  return Task.map(Promise.all(Belt_Array.map([
                      Command.getJobs,
                      Conan.getJobs,
                      Docker.getJobs
                    ], (function (f) {
                        return Curry._1(f, ints);
                      }))), (function (jobs) {
                return Belt_Result.map(Seq.result(jobs), Flat.array);
              }));
}

export {
  parseMode ,
  load ,
  
}
/* Conan Not a pure module */
