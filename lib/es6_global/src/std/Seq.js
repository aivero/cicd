// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Belt_Array from "../../../../node_modules/rescript/lib/es6/belt_Array.js";
import * as Caml_option from "../../../../node_modules/rescript/lib/es6/caml_option.js";

function result(a) {
  return a.reduce((function (a, e) {
                if (a.TAG === /* Ok */0) {
                  if (e.TAG === /* Ok */0) {
                    return {
                            TAG: /* Ok */0,
                            _0: Belt_Array.concat(a._0, [e._0])
                          };
                  } else {
                    return {
                            TAG: /* Error */1,
                            _0: e._0
                          };
                  }
                } else {
                  return {
                          TAG: /* Error */1,
                          _0: a._0
                        };
                }
              }), {
              TAG: /* Ok */0,
              _0: []
            });
}

function result2(a1, a2) {
  if (a1.TAG === /* Ok */0) {
    if (a2.TAG === /* Ok */0) {
      return {
              TAG: /* Ok */0,
              _0: [
                a1._0,
                a2._0
              ]
            };
    } else {
      return {
              TAG: /* Error */1,
              _0: a2._0
            };
    }
  } else {
    return {
            TAG: /* Error */1,
            _0: a1._0
          };
  }
}

function option(a) {
  return a.reduce((function (a, e) {
                if (a !== undefined && e !== undefined) {
                  return Belt_Array.concat(a, [Caml_option.valFromOption(e)]);
                }
                
              }), []);
}

function option2(a1, a2) {
  if (a1 !== undefined && a2 !== undefined) {
    return [
            Caml_option.valFromOption(a1),
            Caml_option.valFromOption(a2)
          ];
  }
  
}

export {
  result ,
  result2 ,
  option ,
  option2 ,
  
}
/* No side effect */
