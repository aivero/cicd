// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Belt_Array from "../../../../node_modules/rescript/lib/es6/belt_Array.js";
import * as TaskResult from "../std/TaskResult.js";

function filter(ints, comps) {
  return ints.filter(function (param) {
              var version = param.version;
              var name = param.name;
              if (comps.some(function (comp) {
                      var match = Belt_Array.get(comp, 0);
                      var match$1 = Belt_Array.get(comp, 1);
                      if (match === undefined) {
                        return false;
                      }
                      if (match === "*" && match$1 !== undefined) {
                        return match$1 === "*" ? true : match$1 === version;
                      }
                      return match$1 !== undefined && match$1 !== "*" ? false : match === name;
                    })) {
                return !comps.some(function (comp) {
                            var cname = Belt_Array.get(comp, 0);
                            if (cname !== undefined && cname.startsWith("-")) {
                              return cname.slice(1) === name;
                            } else {
                              return false;
                            }
                          });
              } else {
                return false;
              }
            });
}

function findInts(allInts) {
  console.log("Manual Mode: Create instances from manual args");
  var comps = Deno.env.get("component");
  var comps$1 = (comps == null) ? [] : (console.log("Building components: " + comps), Belt_Array.map(comps.split(","), (function (comp) {
              return comp.split("/");
            })));
  return TaskResult.map(allInts, (function (ints) {
                return filter(ints, comps$1);
              }));
}

export {
  filter ,
  findInts ,
  
}
/* No side effect */
