// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Belt_Array from "../../../../node_modules/rescript/lib/es6/belt_Array.js";
import * as TaskResult from "../std/TaskResult.js";

function filter(ints, comps) {
  return ints.filter(function ($$int) {
              var match = $$int.name;
              var match$1 = $$int.version;
              if (match !== undefined && match$1 !== undefined && comps.some(function (comp) {
                      var match$2 = Belt_Array.get(comp, 0);
                      var match$3 = Belt_Array.get(comp, 1);
                      return match$2 !== undefined ? (
                                match$3 !== undefined ? (
                                    match$2 === "*" && match$3 === "*" ? true : (
                                        match$2 === "*" ? match$1 === match$3 : (
                                            match$3 === "*" ? match === match$2 : false
                                          )
                                      )
                                  ) : match === match$2
                              ) : false;
                    })) {
                return !comps.some(function (comp) {
                            var name = Belt_Array.get(comp, 0);
                            if (name !== undefined && name.startsWith("-")) {
                              return name.slice(1) === match;
                            } else {
                              return false;
                            }
                          });
              } else {
                return false;
              }
            });
}

function findInts(allInts) {
  console.log("Manual Mode: Create instances from manual args");
  var comps = Deno.env.get("component");
  var comps$1 = (comps == null) ? [] : (console.log("Building components: " + comps), Belt_Array.map(comps.split(","), (function (comp) {
              return comp.split("/");
            })));
  return TaskResult.map(allInts, (function (ints) {
                return filter(ints, comps$1);
              }));
}

export {
  filter ,
  findInts ,
  
}
/* No side effect */
