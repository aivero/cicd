// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Conan from "./Conan.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as Docker from "./Docker.js";
import * as Command from "./Command.js";
import * as Hash$Std from "@prefix_re/std/lib/es6/src/Deno/Hash.js";
import * as Array$Std from "@prefix_re/std/lib/es6/src/Array.js";
import * as Async$Std from "@prefix_re/std/lib/es6/src/Async.js";
import * as Result$Std from "@prefix_re/std/lib/es6/src/Result.js";

function parseMode(str) {
  switch (str) {
    case "conan" :
        return "conan";
    case "docker" :
        return "docker";
    default:
      return "command";
  }
}

function hashN(__x) {
  return Hash$Std.hashN(__x, 3);
}

function handleDuplicates(jobs) {
  return Array$Std.flatMap(Array$Std.groupBy(jobs, (function (param) {
                    return param[0];
                  })), (function (param) {
                var group = param[1];
                if (group.length === 1) {
                  return [group[0]];
                }
                var jobs = Array$Std.map(group, (function (param) {
                        var job = param[1];
                        return [
                                param[0] + "@" + Hash$Std.hashN(job, 3),
                                job
                              ];
                      }));
                return Array$Std.concat(jobs, [[
                              param[0],
                              {
                                extends: undefined,
                                variables: undefined,
                                image: undefined,
                                tags: ["x86_64"],
                                script: ["echo"],
                                needs: Array$Std.map(jobs, (function (param) {
                                        return param[0];
                                      })),
                                services: undefined,
                                cache: undefined
                              }
                            ]]);
              }));
}

function load(ints) {
  return Async$Std.map(Promise.all(Array$Std.map([
                      Command.getJobs,
                      Conan.getJobs,
                      Docker.getJobs
                    ], (function (f) {
                        return Curry._1(f, ints);
                      }))), (function (jobs) {
                return Result$Std.map(Result$Std.seq(jobs), (function (jobs) {
                              return handleDuplicates(Array$Std.flatten(jobs));
                            }));
              }));
}

var hashLength = 3;

export {
  parseMode ,
  hashLength ,
  hashN ,
  handleDuplicates ,
  load ,
  
}
/* Conan Not a pure module */
