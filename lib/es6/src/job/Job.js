// Generated by ReScript, PLEASE EDIT WITH CARE

import * as $$Array from "../std/Array.js";
import * as Async from "../std/Async.js";
import * as Conan from "./Conan.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as Docker from "./Docker.js";
import * as Result from "../std/Result.js";
import * as Command from "./Command.js";

function parseMode(str) {
  switch (str) {
    case "conan" :
        return "conan";
    case "conan-install-script" :
        return "conan-install-script";
    case "conan-install-tarball" :
        return "conan-install-tarball";
    case "docker" :
        return "docker";
    default:
      return "command";
  }
}

function load(ints) {
  return Async.map(Promise.all($$Array.map([
                      Command.getJobs,
                      Conan.getJobs,
                      Docker.getJobs
                    ], (function (f) {
                        return Curry._1(f, ints);
                      }))), (function (jobs) {
                return Result.map(Result.seq(jobs), $$Array.flatten);
              }));
}

export {
  parseMode ,
  load ,
  
}
/* Conan Not a pure module */
