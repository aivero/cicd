generate-config-manual:
  image: $CICD_DOCKER_IMAGE
  stage: build
  variables:
    mode: manual
    component: "*/*"
  script:
    - deno --version
    - deno run --unstable --allow-all --import-map ./import_map.json ./lib/es6/src/GenerateConfig.js
  artifacts:
    paths:
      - generated-config.yml 
      - lock.bundle
      - build_order.json
      - "*.lock"

child-pipeline-manual:
  stage: test
  trigger:
    include:
      - artifact: generated-config.yml
        job: generate-config-manual
    strategy: depend

generate-config-git:
  image: $CICD_DOCKER_IMAGE
  stage: build
  variables:
    mode: git
    GIT_DEPTH: 0
    GIT_FETCH_EXTRA_FLAGS: --prune --depth 50
  script:
    - deno --version
    - deno run --unstable --allow-all --import-map ./import_map.json ./lib/es6/src/GenerateConfig.js
  artifacts:
    paths:
      - generated-config.yml
      - lock.bundle
      - build_order.json
      - "*.lock"

child-pipeline-git:
  stage: test
  trigger:
    include:
      - artifact: generated-config.yml
        job: generate-config-git

dry-run:triage:
  image: ruby
  stage: build
  script:
    - gem install gitlab-triage
    - gitlab-triage --help
    - gitlab-triage --dry-run --token $API_TOKEN --source projects --source-id $CI_PROJECT_PATH
  when: manual
  except:
    - schedules

policy:run:
  image: ruby
  stage: build
  script:
    - gem install gitlab-triage
    - gitlab-triage --token $API_TOKEN --source projects --source-id $CI_PROJECT_PATH
  when: manual
  except:
    - schedules

schedule:policyrun:
  image: ruby
  stage: build
  script:
    - gem install gitlab-triage
    - gitlab-triage --token $API_TOKEN --source projects --source-id $CI_PROJECT_PATH
  only:
    - schedules
